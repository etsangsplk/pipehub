pool:
  vmImage: Ubuntu 16.04

name: $(SourceBranchName)-$(Rev:.r)
container: pipehub/ci:1

variables:
  EXEC_CONTAINER: false

trigger:
  batch: true
  paths:
    exclude:
      - cmd/pipehub/pipehub.sample.hcl
      - misc/docker/build/entrypoint.sh
      - misc/docker/ci/tools.json
      - .gitignore
      - .goreleaser.yml
      - changelog.md
      - license
      - readme.md

jobs:
  - job: A
    steps:
      - script: exit 1

  - job: B
    dependsOn: A
    condition: failed()
    steps:
      - script: echo this will run when A fails

  - job: C
    dependsOn:
      - A
      - B
    condition: succeeded('B')
    steps:
      - script: echo this will run when B runs and succeeds
# jobs:
#   - job: Quality
#     steps:
#       - script: |
#           go build -mod readonly -o bin/pipehub/pipehub cmd/pipehub/*.go
#         displayName: 'Build'

#       - script: |
#           make go-test
#         displayName: 'Quality - Go Test'

#       - script: |
#           make go-linter
#         displayName: 'Quality - Go Linter'

#       - script: |
#           make go-linter-vendor
#         displayName: 'Quality - Go Linter Vendor'

#       - script: |
#           make docker-linter
#         displayName: 'Quality - Docker Linter'
# steps:
#   - job: Quality
#     steps:
#       - script: |
#           go build -mod readonly -o bin/pipehub/pipehub cmd/pipehub/*.go
#         displayName: 'Build'

#       - script: |
#           make go-test
#         displayName: 'Quality - Go Test'

#       - script: |
#           make go-linter
#         displayName: 'Quality - Go Linter'

#       - script: |
#           make go-linter-vendor
#         displayName: 'Quality - Go Linter Vendor'

#       - script: |
#           make docker-linter
#         displayName: 'Quality - Docker Linter'

#   - job: Build
#     dependsOn: Build
#     steps:
#       - script: |
#           make build
